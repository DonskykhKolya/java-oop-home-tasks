package com.shpach.studgroup;

import com.shpach.studgroup.Student.Grade;

public class ClassGroup {
	private String className = "";
	private Student.Grade grade;
	private Student[] students = new Student[10];

	public ClassGroup(String className, Grade grade, Student[] students) {
		super();
		this.className = className;
		this.grade = grade;
		this.students = students;
	}

	public ClassGroup() {
		super();
	}

	public String getClassName() {
		return className;
	}

	public void setClassName(String className) {
		this.className = className;
	}

	public Student.Grade getGrade() {
		return grade;
	}

	public static class ClassFullExeption extends Exception {

		@Override
		public String getMessage() {
			return "Class is full";
		}
	}

	public static class NullStudentExeption extends Exception {

		@Override
		public String getMessage() {
			return "Input param is null";
		}
	}

	public static class StudentAllreadyExistExeption extends Exception {

		@Override
		public String getMessage() {
			return "Nothing to add";
		}
	}

	public static class WrongGradeExeption extends Exception {

		@Override
		public String getMessage() {
			return "Nothing to add";
		}
	}

	public static class StudentDoesNotExistExeption extends Exception {

		@Override
		public String getMessage() {
			return "Nothing to add";
		}
	}

	public void addStudent(Student st)
			throws ClassFullExeption, NullStudentExeption, StudentAllreadyExistExeption, WrongGradeExeption {
		int freeIndx = -1;
		if (st == null)
			throw new NullStudentExeption();
		if (st.getGrade() != this.grade)
			throw new WrongGradeExeption();
		for (int i = 0; i < this.students.length; i++) {
			if (this.students[i] == null) {
				freeIndx = i;
			} else {
				if (this.students[i].equals(st))
					throw new StudentAllreadyExistExeption();
			}
		}
		if (freeIndx != -1) {
			this.students[freeIndx] = st;
			st.setClassName(this.getClassName());
		} else {
			throw new ClassFullExeption();
		}

	}

	public void deleteStudent(Student st) throws StudentDoesNotExistExeption, NullStudentExeption {
		int freeIndx = -1;
		if (st == null)
			throw new NullStudentExeption();
		for (int i = 0; i < this.students.length; i++) {
			if (this.students[i].equals(st))
				freeIndx = i;
		}
		if (freeIndx != -1) {
			this.students[freeIndx] = null;
		} else {
			throw new StudentDoesNotExistExeption();
		}
	}

}
