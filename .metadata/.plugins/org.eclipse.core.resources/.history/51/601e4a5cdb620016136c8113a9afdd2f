package com.shpach.filescopy;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilenameFilter;
import java.io.IOException;

import com.shpach.filescopy.IOUtils.InputParamNotDirExeption;

public class MultyThreadCopy implements Runnable {
	private File dirFrom;
	private File dirTo;
	FilenameFilter fnf;
	private int threadNumber;
	Thread th;

	public MultyThreadCopy(File dirFrom, File dirTo, FilenameFilter fnf, int threadNumber) throws InputParamNotDirExeption {
		super();
		this.dirFrom = dirFrom;
		this.dirTo = dirTo;
		this.fnf = fnf;
		this.threadNumber = threadNumber;
		if (dirFrom.exists() && dirTo.exists()) {
			if (!dirFrom.isDirectory() || !dirTo.isDirectory()) 
				throw new IOUtils.InputParamNotDirExeption();
			
		} else 
			throw new IOUtils.InputParamNotDirExeption();
		
		th = new Thread(this);
		th.start();

	}

	public MultyThreadCopy(File dirFrom, File dirTo, FilenameFilter fnf) throws InputParamNotDirExeption {
		this(dirFrom, dirTo, fnf, Runtime.getRuntime().availableProcessors());

	}

	public MultyThreadCopy() {
		super();
	}

	@Override
	public void run() {
		System.out.println("Start copy directory " + this.dirFrom + "to " + this.dirTo);
		File[] fileList = dirFrom.listFiles(fnf);
		ThreadCopy[] trArr = new ThreadCopy[fileList.length];
		for (int i = 0; i < fileList.length; i++) {
			trArr[i] = new ThreadCopy(fileList[i], new File(dirTo.getAbsolutePath() + "/" + fileList[i].getName()));
		}
		for (int i = 0; i < trArr.length; i++) {
			try {
				trArr[i].getTh().join();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		System.out.println("Done ");

	}

	private class ThreadCopy implements Runnable {
		private File fileFrom;
		private File fileTo;
		Thread th;

		public ThreadCopy(File fileFrom, File fileTo) {
			super();
			this.fileFrom = fileFrom;
			this.fileTo = fileTo;
		}

		public ThreadCopy() {
			super();
		}

		public Thread getTh() {
			return th;
		}

		@Override
		public void run() {
			try {
				IOUtils.copyFile(this.fileFrom, this.fileTo);
				System.out.println("File " + this.fileFrom + "successfully copied " + this.fileTo);
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}

	}

}
